<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_liftMain1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_buildingParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General
global.workerBuild = 1;
global.building = 1;
global.selected = id;

groundY = 615;
surfaceOnly = 1;
originOffX = 0;
originOffY = -4;
menuY = y+300;
costWoodCommon = 600;
costStone = 200;

//Sprites
spriteLevel[0] = spr_liftMain1;
spriteLevel[1] = spr_liftMain1;
spriteLevel[2] = spr_liftMain1;
spriteLevel[3] = spr_liftMain1;
spriteLevel[4] = spr_liftMain1;

//Cost array table 
//cost[0,0]
cost[0,0] = 'woodCommon'; //Type
cost[0,1] = 500; //Total amount needed
cost[0,2] = 500; //Amount left
cost[1,0] = 'stone'; 
cost[1,1] = 200; 
cost[1,2] = 200; 
cost[2,0] = -1; 
cost[2,1] = -1; 
cost[2,2] = -1; 

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pop up text

//Pop up text
buildingName = "Lift";
textPopUp = 0;
popUpX1 = 80
popUpX2 = 89
popUpY1 = -290;
popUpY2 = -302;
textDrawX = - 60;
textDrawY = -300;
yOffset = 100;
textXExtra = 6; 
popUpWidth = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Elevator 

image_speed = 0;

myElevator = instance_create(x, y, obj_elevator);
myElevator.myLift = id;
ropeColor = make_colour_rgb(173, 145, 112);

enum STATES{
    idle,
    movingUp,
    movingDown,
}

state = STATES.idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Elevator 

if (!built){
    myElevator.visible = 0;
}else{
    myElevator.visible = 1;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ropes

draw_self();

//Draw the 2 ropes connecting the elevator and the lift
if (instance_exists(myElevator) &amp;&amp; built){
    var rope1X1 = x - 94;
    var rope1Y1 = y - 106;
    var rope1X2 = x - 94;
    var rope1Y2 = myElevator.y - 80;
    
    var rope2X1 = x - 88;
    var rope2Y1 = y - 106;
    var rope2X2 = x - 88;
    var rope2Y2 = myElevator.y - 80;
    
    draw_set_colour(ropeColor);
        
        draw_line(rope1X1, rope1Y1, rope1X2, rope1Y2);
        draw_line(rope1X1+1, rope1Y1, rope1X2+1, rope1Y2);
        
        draw_line(rope2X1, rope2Y1, rope2X2, rope2Y2);
        draw_line(rope2X1+1, rope2Y1, rope2X2+1, rope2Y2);
    
    draw_set_colour(c_white);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
