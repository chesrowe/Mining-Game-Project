<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scr_uiWindowCollider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_uiDebugWindowParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///general
//Window Size
/*
windowWidth = 3;
windowHeight = 3;
windowX = x;
windowY = y;
showShowWindow = 0;
myInstance = -4;
image_xscale += windowWidth + 1;

//Drag
dragging = 0;
xOff = 0;
yOff = 0;
viewXOff = x - view_xview[0];
viewYOff = y - view_yview[0];

//Exit button
myExit = instance_create(x + (windowWidth * 32),y + 32, obj_uiWindowExit);
myExit.myWindow = id;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Debug array

///Setup debug text

//Name of window
windowName = "General Info"

//debugList array
//debugList[nameOfVar, valueOfVar]
debugList[0, 0] = "Total instances  ";
debugList[0, 1] = string(instance_count);  
debugList[1, 0] = "Tile count  ";
debugList[1, 1] = string(global.tileCount);  
debugList[2, 0] = "Workers  ";
debugList[2, 1] = string(instance_number(obj_workerParent));  
debugList[3, 0] = -1;
debugList[3, 1] = -1;  

//Find the number of debug variables
debugVarNumber = 0;
for (i = 0; i &lt; 50; i++){
    if (debugList[i, 0] != -1){
        debugVarNumber ++;   
    }else{
        break;
    }
}

//Set the size of the window to match the number of debug variables
var widestDebug = 0; //in pixels
show_debug_message(string(widestDebug));

//Find the widest variable in the debugList
for (a = 0; a &lt; 50; a++){
    if (debugList[a, 0] != -1){
        show_debug_message(string(widestDebug));
        if ( (string_width(debugList[a, 0] + debugList[a, 1] ) ) &gt; widestDebug){
            widestDebug = string_width(debugList[a, 0] + debugList[a, 1] );    
        } 
    }else{
        if (string_width(windowName) &gt; widestDebug){
            widestDebug = string_width(windowName);
        }
        break;
    }    
} 
show_debug_message(string(widestDebug));

//Find the width needed for the window
var width = ceil( (widestDebug / 32) ) + 0;

windowWidth = width;
windowHeight = debugVarNumber - 1; 

//Set the dragbar's width
image_xscale = windowWidth + 1;









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update debug variables

//debugList array
//debugList[nameOfVar, valueOfVar]
//debugList[0, 0] = "Total instances  ";
debugList[0, 1] = string(instance_count);  
//debugList[1, 0] = "Tile count  ";
debugList[1, 1] = string(global.tileCount);  
//debugList[2, 0] = "Workers  ";
debugList[2, 1] = string(instance_number(obj_workerParent));  

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
