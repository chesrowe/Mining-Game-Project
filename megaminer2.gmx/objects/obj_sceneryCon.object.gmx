<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up surface

global.scenerySurfaceWidth = (7680);
global.scenerySurface[0] = surface_create(global.scenerySurfaceWidth,720);
surfNumber = 1;

//Dynamicly create surfaces
i = 1;
repeat(20){
    if ( (global.tileCount*32) &gt; (7680*i) ){
        global.scenerySurface[i] = surface_create(7680,2560);   
        surfNumber++;
        i++;
             
    }else if (x &lt; 7680*i){
        break;
    }
    
}
with (obj_tileSurfaceFlatParent){
    var e = 1; 
    repeat(20){
        if ( x &gt;= (7680*e) ){
            mySurf = global.scenerySurface[e];
            xAdd = (7680*e);
            surfIndex = e;  
            e++;     
        }else if (x &lt; 7680*e){
            break;
        }
        
    }  
    //Draw the sprites to the surface
    surface_set_target(mySurf);
        var e = 0;
        repeat(flatNumber){
            draw_sprite(grass[e,2],grass[e,0],x + (e*32) + grass[e,1],y-50);
        e++;
        }
    surface_reset_target(); 
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(global.scenerySurface)){
    surface_free(global.scenerySurface);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw scenery


//Loop through the surfaces and draw them
var u = 0;
repeat(surfNumber){
    if (surface_exists(global.scenerySurface[u])){
        draw_surface(global.scenerySurface[u],0 + (u * 7680),0);
    }else{
        global.scenerySurface[u] = surface_create(7680,2560);
    }
    u++;
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
