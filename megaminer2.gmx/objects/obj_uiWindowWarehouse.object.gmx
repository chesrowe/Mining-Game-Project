<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scr_uiWindowCollider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_uiWindowParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Window setup

//Window Size
windowWidth = 9;
windowHeight = 5;
windowX = x;
windowY = y;
showShowWindow = 0;
myButton = -4;
image_xscale = windowWidth + 1;

//Create the arrows for the window
arrowRight = instance_create(x, y, obj_uiWarehouseArrowRight);
arrowRight.myWindow = id;

arrowLeft = instance_create(x, y, obj_uiWarehouseArrowLeft);
arrowLeft.myWindow = id;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resource icon array
iconSet = 0;
setNumber = 2;

//First set of six
//Array to hold the active ids of the icons
iconArray[0,0] = -4;
iconArray[0,1] = -4;
iconArray[0,2] = -4;
iconArray[0,3] = -4;
iconArray[0,4] = -4;
iconArray[0,5] = -4;

//Array to hold the object index of the icons
iconObjectArray[0,0] = obj_uiWarehouseResourceIconWoodCommon;
iconObjectArray[0,1] = obj_uiWarehouseResourceIconWoodBirch;
iconObjectArray[0,2] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[0,3] = obj_uiWarehouseResourceIconFood;
iconObjectArray[0,4] = obj_uiWarehouseResourceIconStone;
iconObjectArray[0,5] = obj_uiWarehouseResourceIconGold;
iconObjectArray[1,0] = obj_uiWarehouseResourceIconWoodCommon;


//First set of six
iconArray[1,0] = -4;
iconArray[1,1] = -4;
iconArray[1,2] = -4;
iconArray[1,3] = -4;
iconArray[1,4] = -4;
iconArray[1,5] = -4;

iconObjectArray[1,0] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[1,1] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[1,2] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[1,3] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[1,4] = obj_uiWarehouseResourceIconWoodOak;
iconObjectArray[1,5] = obj_uiWarehouseResourceIconWoodOak;

//Create the first set
var a = -18;
for (i = 0; i &lt;= 5; i++){
    iconArray[0,i] = instance_create(x, y , iconObjectArray[0,i]);
    iconArray[0,i].depth = a;
    a++;
} 



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy resource icons and arrows

//Destroy the arrows
if (instance_exists(obj_uiWarehouseArrowRight)){
    with(obj_uiWarehouseArrowRight){
        instance_destroy();
    }
}

if (instance_exists(obj_uiWarehouseArrowLeft)){
    with(obj_uiWarehouseArrowLeft){
        instance_destroy();
    }
}

//Destroy the resource icons
for (i = 0; i &lt;= 5; i++){
    if (instance_exists(iconArray[iconSet,i])){
        with(iconArray[iconSet,i]){
            instance_destroy();    
        }
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Snap resource icons

var a = x + 32;
for (i = 0; i &lt;= 5; i++){
    iconArray[iconSet,i].x = a;
    a += 40;
    if (i == 2){
        a = x + 32;    
    }
    if (i &gt; 2){
        iconArray[iconSet,i].y = y + 16 + 40;    
    }else{
        iconArray[iconSet,i].y = y + 16;    
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let building know the window is open

if (instance_exists(obj_structureButtonWarehouseShowResources)){
    with(obj_structureButtonWarehouseShowResources){
        windowOpen = 1;
    }
}

//Snap the right arrow to the window
if (instance_exists(arrowRight)){
    arrowRight.x = x + (windowWidth * 16) + 16;
    arrowRight.y = y + ((windowHeight / 2) * 16) + 8;
}

//Snap the left arrow to the window
if (instance_exists(arrowLeft)){
    arrowLeft.x = x + 16;
    arrowLeft.y = y + ((windowHeight / 2) * 16) + 8;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_uiWindowWarehouse</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text in window

draw_text(x + 40, y + 8,"Settlement Resources.");


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
