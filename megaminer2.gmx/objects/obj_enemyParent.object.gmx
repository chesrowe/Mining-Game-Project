<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_speed = .2;

hp = 160;
dmg = 5;
dmgNumber = 0;
knockBackLeft = 0;
knockBackRight = 0;
knockTimer = 0;
moveSpeed = 0;
facing = 'right';

hpBar = instance_create(x,y,obj_enemyHpDraw);
hpBar.enemy = 1;
hpBar.myEnemy = id;
hpBar.hp = hp;
hpBar.hpMult = (hp/10);
dying = 0;
image_speed = .1;
jumpAttack = 1;
state = 'walking'
jumpTimer = 0;
jumping = 0;
walkSpeed = .5;
runSpeed = 1.5;
nearestTarget = 0;
knockBackSpeed = 2;
minerDist = 0;
madeContact = 0;
contactTarget = 0;
attack = 0;
attackTimer = 0;

spriteAttackingRight = spr_wolfAttackingRight;
spriteAttackingLeft = spr_wolfAttackingLeft;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (!dying){
    //sets nearest to the nearest miner
    if (instance_exists(obj_minerParentP1)){
        nearestTarget = instance_nearest(x,y,obj_minerParentP1);
        minerDist = distance_to_point(nearestTarget.x,nearestTarget.y);
    }else{
        madeContact = 0;
        contactTarget = -1;
        minerDist = 999999999999;
        nearestTarget = -1;
    }
    if (jumpAttack){
    
    }else{
        
    }
    if (minerDist &lt; 150 &amp;&amp; nearestTarget != -1){
            state = 'attacking';
    }else{
            state = 'walking';
    } 
    if (knockBackLeft){
        knockTimer ++;
        if (knockTimer &lt; 10){
            x += -(knockBackSpeed);
            
        }else{
            knockBackLeft = 0;
               
        }    
    }
    if (knockBackRight){
        knockTimer ++;
        if (knockTimer &lt; 10){
            x  += knockBackSpeed;
            
        }else{
            knockBackRight = 0;
              
        }    
    }
    if (!knockBackRight &amp;&amp; !knockBackLeft &amp;&amp; state == 'walking'){
        x += walkSpeed;
    } 
    if (!knockBackRight &amp;&amp; !knockBackLeft &amp;&amp; state == 'attacking'){
        if (!madeContact){
            x += runSpeed;    
        }else{
            if (contactTarget.x &gt; x){
                sprite_index = spriteAttackingRight;
            }else{
                sprite_index = spriteAttackingLeft;
            }
            attackTimer ++;
            if (attackTimer &gt;= 20){
                image_speed = .08;
            }
            if (attackTimer &gt;= 50){
                x += runSpeed;
                if (attackTimer &gt;= 60){
                    attackTimer = 0;
                    image_speed = 0;
                    image_index = 0;
                }
            }
        }
    }  
}else{
    image_speed = 0;
    image_alpha -= .01;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_minerParentP1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
madeContact = 1;
contactTarget = other.id;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//destroy the arrow when it hits the enemy
if (!other.stuck){
    madeContact = 0;
    attackTimer = 0;
    with(other){
        //instance_destroy();
    }
    //Transfers the dmg info from the arrow
    dmgNumber = instance_create(x,y-10,obj_enemyDrawCon);
    dmgNumber.myEnemy = id;
    dmgNumber.dmg = other.dmg;
    //Makes sure the hp doesn't go into the negatives
    if (hp &gt; 0){
        hp -= other.dmg;
    }else{
        hp = 0;
    }
    //Creates the knockback effect
    if (other.x &gt; x){
        knockBackLeft = 1;
        knockBackRight = 0;
        knockTimer = 0;
    }else{
        knockBackLeft = 0;
        knockBackRight = 1;
        knockTimer = 0;    
    }
    //creates blood effects
    part_particles_create(global.partEnemyBlood,x,y,global.partBloodRed,20);
    
    other.stuck = 1;
    other.xoff = x - other.x;
    other.yOff = y - other.y;
    other.myEnemy = id;
    other.image_angle += choose(irandom(5),irandom(-5));
    if (other.x &gt; x){
        other.xOff += 10;
    }else{
        other.xOff -= 10;
    }
}
//starts the dying animation after the enemy runs out of hp
if (hp &lt;= 0){
    dying = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
part_system_destroy(global.partEnemyBlood);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,8</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
