<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General 

//Local variables
refresh = 0;
refresh_ = 0;

makeMinerP1 = 0;
makeMinerP2 = 0;

minerTimerP1 = 0;
minerTimerP2 = 0;

timer = 0;
created = 0;
myStruc = 0;
structurePlaced = 0;
refresh__ = 0;
alpha = 1;
countUp = 0;
countDown = 1;
scrollSpeed = 0;
scrolling = 0;
maxScroll = 0;
scrollIncrements = 0;
mouseOverPopUpMenu = 0;
moveTimer = 0;
moveTimerStart = 0;
instance_create(x,y,obj_gameFadeIn);



//Workers/guardians
unitMoveX = 0;


//Select box
global.selectBoxStart = 0;
global.selectTimer = 0;
global.select = 0;
global.selectStartX = 0;
global.selectStartY = 0;
global.selectedNumber = 0;
//init array to hold selected units
for (i = 0; i &lt; 100; i++){
    global.unitSelected[i] = noone;
}
insideSelectBox = 0;


//General
global.state = 'neutral';
global.weatherState = 'clear';
global.battleLayer = noone;
global.dev_mode_delete = 0;
global.dev_mode = 0;
global.dev_mode_dupe = 0;
global.dupeObject = noone;
global.selected = noone;
global.shiftSelect = 0;
global.multiClickSelect = 0;
global.clickTimer = 0;
global.workerSelectAll = 0;
global.workerSelectState = 'idle';
global.workerStateSelect = 0;
instance_create(x,y,obj_selectBoxDraw);

//layers
global.currentLayer = 0;
global.layersDiscovered = 0;

//Controls
global.gamepad = 0;
global.localCoop = 0;

//Resources
global.goldP1 = 900000;
global.stoneP1 = 0;

global.goldP2 = 400;
global.stoneP2 = 0;

global.crystalP1 = 0;
global.crystalP1 = 0;

global.brimstoneP1 = 0;
global.brimstoneP2 = 0;

global.mushroomP1 = 0;
global.mushroomP2 = 0;

global.woodP1 = 10000;
global.woodP2 = 0;

global.foodP1 = 0;
//Gamepad Specific
global.controllerCount = 0;

//Farming/Population
global.popP1 = 0;
global.popP2 = 0;

global.maxPopP1 = 10;
global.maxPopP2 = 10;

//Fonts
global.fontDmg = font_add_sprite(spr_ft_small,ord(' '),1,1);
draw_set_font(global.fontDmg);

// Checks to see if the game is co op or not
if (room == Local_Coop_1){
    global.localCoop = 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UI

//Gamepad Specific
global.selectedP1 = 0;
global.selectedP2 = 0;

global.buildingP1 = 0;
global.buildingP2 = 0;

global.buildingMenuP1 = 0;
global.buildingMenuP2 = 0;

global.minersP1 = 0;
global.minersP2 = 0;

global.minerSelectP1 = 0;
global.minerSelectP2 = 0;

global.selectRockP1 = 0;
global.selectRockP2 = 0;

global.rockSelectedP1 = 0;
global.rockSelectedP2 = 0;

global.defenceMenuP1 = 0;
global.defenceMenuP2 = 0;

global.buildingDefenceP1 = 0;
global.buildingDefenceP2 = 0;

//Mouse/keyboard Specific 
global.building = 0;
global.buildingDefense = 0;
global.buildMenuOpen = 0;
global.buildMenuPushOut = 0;
global.buildMenuWorkerPushOut = 0;
global.buildMenuDefensePushOut = 0;
global.buildMenuBuildingPushOut = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sound

//Sound Variables
global.currentSong = 0;
global.mute = 0;
pickSoundTimer = 0;

//set listener orientation 
audio_listener_orientation(0,1,0,0,0,1);

//Putting sounds into arrays
global.specialMusic[0] = sd_mainTheme; //Main theme for game

global.surfaceMusic[0] = sd_surfaceDayNeutral1; //day neutral 1
global.surfaceMusic[1] = sd_surfaceDayNeutral2; //day neutral 2
global.surfaceMusic[2] = 0; //day battle 1
global.surfaceMusic[3] = 0; // day battle 2
global.surfaceMusic[4] = sd_surfaceNightNeutral1; // night neutral 1
global.surfaceMusic[5] = 0; //Night neutral 2
global.surfaceMusic[6] = 0; //Night battle 1
global.surfaceMusic[7] = 0; //Night battle 2

global.caveMusic[0] = sd_caveNeutral1; // Cave neutral 1
global.caveMusic[1] = 0; // Cave neutral 2
global.caveMusic[2] = 0; //Cave battle 1
global.caveMusic[3] = 0; // Cave battle 3

global.mushroomMusic[0] = 0; // neutal 1
global.mushroomMusic[1] = 0; // neutral 2
global.mushroomMusic[2] = 0; // battle 1
global.mushroomMusic[3] = 0; // battle 2

global.hauntedMusic[0] = 0;
global.hauntedMusic[1] = 0;
global.hauntedMusic[2] = 0;
global.hauntedMusic[3] = 0;

global.fireMusic[0] = 0;
global.fireMusic[1] = 0;
global.fireMusic[2] = 0;
global.fireMusic[3] = 0;

global.frozenMusic[0] = 0;
global.frozenMusic[1] = 0;
global.frozenMusic[2] = 0;
global.frozenMusic[3] = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particles

//create the particle system for blood
spr_part_blood_init();

//Create particle system for miners
global.partMining = part_system_create();
global.partStoneChips = part_type_create();
global.partWoodChips = part_type_create();

//stone
part_type_gravity(global.partStoneChips,.3,270);
part_type_sprite(global.partStoneChips,spr_partStoneChips,0,0,1);
part_type_speed(global.partStoneChips,.5,2,.1,1);
part_type_direction(global.partStoneChips,0,360,0,1);
part_type_life(global.partStoneChips,1,10);

//Wood
part_type_gravity(global.partWoodChips,.3,270);
part_type_sprite(global.partWoodChips,spr_partWoodChips,0,0,1);
part_type_speed(global.partWoodChips,.5,2,.1,1);
part_type_direction(global.partWoodChips,0,360,0,1);
part_type_life(global.partWoodChips,1,10);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Multi-click select

if (global.clickTimer &gt;= 1){
    global.clickTimer ++;
    if (global.clickTimer &gt;= 25){
        global.clickTimer = 0;
        global.multiClickSelect = 0;
        global.workerSelectAll = 0;
        global.workerStateSelect = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sound

//Set listener position
audio_listener_position(view_xview[0]+640,view_yview[0]+360,0); 

//Checks to see which layer the player is on and if there is a battle or not, then plays the appropriate music

//Surface layer
if (global.currentLayer == 0){
    
    if (global.state = 'battle' &amp;&amp; !global.mute){
    //battle music    
    }else{
        //play neutral music
        if (!audio_is_playing(global.surfaceMusic[global.currentSong]) &amp;&amp; !global.mute){
            //changes the song when one is done playing
            if (global.currentSong = 0){
                global.currentSong = 1;
            }else{
                global.currentSong = 0;
            }
            audio_play_sound(global.surfaceMusic[global.currentSong],100,0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad
if (global.gamepad){
    //Deals with main game mechcanics!! MIXED PLAYERS!! not just player1
    global.controllerCount = gamepad_get_device_count(); //
    //Sloppy jumbled code below --&gt;
    if (gamepad_is_connected(0)){ // &lt;-- Checks to see if the gamepad is connected
        if (gamepad_button_check_released(0, gp_face1)){// &lt;-- Checks for the 'A' button to be released!! 
          
              if (global.buildingMenuP1){
                global.buildingP1 = 1;
              }
             if (global.selectedP1 == 1 &amp;&amp; !global.minersP1 &amp;&amp; !global.defenceMenuP1){
                global.buildingMenuP1 = 1;
                global.minersP1 = 0;
            }
           if (global.selectedP1 == 0 &amp;&amp; !global.buildingMenuP1 &amp;&amp; !global.minerSelectP1 &amp;&amp; global.minersP1 &amp;&amp; !global.defenceMenuP1){    
                if (global.goldP1 &gt;= 400){ 
                    if (global.popP1 &lt;= (global.maxPopP1-1)){ //&lt;-- Checks to make sure you still have population space left
                        global.minerSelectP1 = 1;
                        
                    }
                }    
            }
             if (global.selectedP1 == 0 &amp;&amp; !global.buildingMenuP1 &amp;&amp; !global.minersP1 &amp;&amp; !global.defenceMenuP1){ // &lt;-- If the miner icon is selected, this makes the miner menu show up! 
                global.minersP1 = 1;
                global.buildingMenuP1 = 0;
            }
             if (global.defenceMenuP1 &amp;&amp; !global.minersP1 &amp;&amp; !global.buildingMenuP1){
                global.buildingDefenceP1 = 1;    
            }
            if (global.selectedP1 == 2 &amp;&amp; !global.buildingMenuP1 &amp;&amp; !global.minersP1){
                global.defenceMenuP1 = 1;
            }
           
            
        } // &lt;-- End of 'A' button check :D \\
        
        //Exits out of base menus when the 'B' button is pressed 
        if (gamepad_button_check_released(0, gp_face2)){
            if (global.minersP1 || global.buildingMenuP1 || global.defenceMenuP1){
                global.minersP1  = 0;
                global.buildingMenuP1 = 0;
                global.defenceMenuP1 = 0;
                global.buildingDefence = 0;
                global.building = 0;
            }    
        }
    
    
        //Controls D-pad menu movement for menus
        if (gamepad_button_check_released(0, gp_padr)){ 
            if(global.selectedP1 &lt;= 2 &amp;&amp; !global.buildingP1 &amp;&amp; !global.buildingDefenceP1){
                global.selectedP1 += 1;
            }
        }
        if (gamepad_button_check_released(0, gp_padl)){
            if(global.selectedP1 &gt;= 1 &amp;&amp; !global.buildingP1 &amp;&amp; !global.buildingDefenceP1){
                global.selectedP1 -= 1;
            }
        }
    } 
    if (global.buildingP1){
        switch(global.selectedP1){
            case 0: 
                //scr_gamepad_build_structure(obj_wheatFarmP1,500,1);
            break;
        }  
    }
    if (global.buildingDefenceP1){
        switch(global.selectedP1){
            case 0: 
                scr_gamepad_build_structure(obj_towerArcherP1,1000,1);
            break;
        }
    }   
    if (global.minerSelectP1){  
        scr_miner_rock_select_create(1,2496,670,6880,670,2496,6880,400,obj_workerHumanP1);
    }
}







</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard/Mouse

//Spacebar makes the game go to full screen
if (keyboard_check_released(vk_space)){ 
    if (!window_get_fullscreen()){
        window_set_fullscreen(true);    
    }else{
        window_set_fullscreen(false);
    }
} 

//Camera movement with mouse
if (mouse_x &lt; view_xview[0] + 40){
    scrolling = 1;
    scrollIncrements = -.5;
    maxScroll = -10;
}

if (mouse_x &gt; view_xview[0] + 1200){
    scrolling = 1;
    scrollIncrements = .5;
    maxScroll = 10;
}
//stops scrolling when no scroll action is beining performed
if (mouse_x &lt; view_xview[0] + 1200 &amp;&amp; mouse_x &gt; view_xview[0] + 40 &amp;&amp; !keyboard_check(ord('A')) &amp;&amp; !keyboard_check(ord('D'))){
    scrolling = 0;
}
//Camera movement with A and D keys
if (keyboard_check(ord('A'))){
    scrolling = 1;
    scrollIncrements = -.5;
    maxScroll = -10;
}
if (keyboard_check(ord('D'))){
    scrolling = 1;
    scrollIncrements = .5;
    maxScroll = 10;
}

//Starts and stops the scrolling
if (scrolling){
    if (scrollSpeed != maxScroll &amp;&amp; scrollSpeed &lt; 11){
        scrollSpeed += scrollIncrements;
    }
    if (view_xview[0] &gt; 0 || view_xview[0] &lt; 1280){ 
        view_xview[0] += scrollSpeed;
    }
    if (view_xview[0] &lt; 0){
        scrollSpeed = 0;
        view_xview[0] = 0;
    }
}else{
    if (scrollSpeed != 0 &amp;&amp; scrollSpeed &lt;= 10){
        scrollSpeed -= scrollIncrements;
    }
    if (view_xview[0] &gt; 0){
        view_xview[0] += scrollSpeed;
    }
} 


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///misc

if (instance_exists(obj_buildingPopUpParent) &amp;&amp; instance_position(mouse_x,mouse_y,obj_buildingPopUpParent)){
    mouseOverPopUpMenu = 1;
}else{
    mouseOverPopUpMenu = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// select box

if (global.select){
    global.selectTimer ++;
    if (global.selectTimer &gt;= 2){
        global.select = 0;
        global.selectTimer = 0;
        global.workerSelectAll = 0;
        global.workerStateSelect = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move units

if (!position_meeting(mouse_x,mouse_y,obj_resourceParent) &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_treeParent) &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_farmingPatch) &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_workerParent)){ 
    scr_unit_array_set_move_target(15);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deselect

if (global.building){
    with (global.selected){
        instance_destroy();
        global.building = 0;
    }
}
//scr_unit_array_clear();
global.selected = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place building

//Build selected buildings
if (global.building &amp;&amp; place_free(mouse_x,mouse_y) &amp;&amp; global.selected != noone &amp;&amp; !global.dev_mode_dupe){
    if ((global.selected).y == (global.selected).groundY){
        (global.selected).placed = 1;
        global.building = 0;
        global.selected = noone;
    }   
}

//deselects the selected object if you click in an empty area
if (!global.building &amp;&amp; global.selected != noone){
    if (!instance_position(mouse_x,mouse_y,obj_workerParent) &amp;&amp; !instance_position(mouse_x,mouse_y,obj_buildingParent) &amp;&amp; !mouseOverPopUpMenu){
        global.selected = noone;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dev Mode

if (global.dev_mode_dupe &amp;&amp; !global.building){
    if (global.dupeObject != noone){
        instance_create(mouse_x,mouse_y,global.dupeObject);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select box

if (global.selectBoxStart){
   //Clear selected units
    //scr_unit_array_clear();
    global.selectBoxStart = 0;
    global.select = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deselect


moveTimerStart = 0;
moveTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select box

//if there is no selectable object underneath the mouse
if (!global.building &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_workerParent) &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_treeParent)&amp;&amp; !position_meeting(mouse_x,mouse_y,obj_resourceParent) &amp;&amp; !global.selectBoxStart &amp;&amp; !global.shiftSelect){
    global.selectBoxStart = 1;
    global.selectStartX = mouse_x;
    global.selectStartY = mouse_y;
    scr_unit_array_clear();

    global.workerStateSelect = 0;
    with(obj_workerParent){
        selected = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Multi-click select
var cleared = 0;
//double click and triple click selects workers
if (position_meeting(mouse_x,mouse_y,obj_workerParent)){
    if (!global.building &amp;&amp; !global.dev_mode_dupe &amp;&amp; !global.shiftSelect){
        global.multiClickSelect ++;
        global.clickTimer = 1;
        if (global.multiClickSelect == 2 &amp;&amp; !cleared){
            scr_unit_array_clear();
            cleared = 1;
            global.workerSelectState = (instance_position(mouse_x,mouse_y,obj_workerParent)).state;
            global.workerStateSelect = 1;
        }
        if (global.multiClickSelect == 3){
            global.workerStateSelect = 0;
            global.workerSelectAll = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up

font_delete(global.fontDmg);
part_system_destroy(global.partMining);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gamepad Ui
if (global.gamepad){
    //Draws static main ui for both players!
    draw_sprite(spr_backUi,0,view_xport[0],view_yport[0]);
    draw_sprite(spr_backUi,0,view_xport[0]+640,view_yport[0]);
    draw_sprite(spr_uiIcons,0,view_xport[0]+2,view_yport[0]+120);
    draw_sprite(spr_uiIcons,0,view_xport[0]+642,view_yport[0]+120);
    if (global.localCoop){
        draw_sprite(spr_uiLine,0,view_xport[0]+637, view_yport[0]+252);
    }
    draw_sprite(spr_goldUi,0,view_xport[0]+8,view_yport[0]+4); //Gold Ui
    draw_sprite(spr_stoneUi,0,view_xport[0]+8,view_yport[0]+27); // stone Ui
    //Draws main menu player 1
    if (!global.buildingMenuP1 &amp;&amp; !global.minersP1 &amp;&amp; !global.defenceMenuP1){
        draw_sprite(spr_minerIcon,0,view_xport[0]+45, view_yport[0]+155);
        draw_sprite(spr_buildIcon,-1,view_xport[0]+203, view_yport[0]+155);
        draw_sprite(spr_uiTowerIcon,-1,view_xport[0]+380, view_yport[0]+155);
        draw_sprite(spr_uiUpgradeIcon,-1,view_xport[0]+540, view_yport[0]+155);
    }
    //Draws miner menu player 1
    if (!global.buildingMenuP1 &amp;&amp; global.minersP1){
        draw_sprite(spr_uiMinerIcon2,0,view_xport[0]+41, view_yport[0]+155);
        draw_sprite(spr_uiGolemIcon,0,view_xport[0]+203, view_yport[0]+155);
    }
    //Text in ui
    draw_set_color(c_white);
    draw_text(view_xport[0]+35,view_yport+11, string(global.goldP1)); // Gold Text
    draw_text(view_xport[0]+35,view_yport+35, string(global.stoneP1)); // Stone Text 
    //Player 2 copy ---&gt;&gt;
    if (!global.buildingP2 &amp;&amp; !global.minersP2){
        draw_sprite(spr_minerIcon,-1,view_xport[1]+45, view_yport[1]+155);
        draw_sprite(spr_buildIcon,-1,view_xport[1]+203, view_yport[1]+155);
        draw_sprite(spr_uiTowerIcon,-1,view_xport[1]+380, view_yport[1]+155);
        draw_sprite(spr_uiUpgradeIcon,-1,view_xport[1]+540, view_yport[1]+155);
    }
    if (!global.buildingP2 &amp;&amp; global.minersP2){
        draw_sprite(spr_uiMinerIcon2,0,view_xport[1]+41, view_yport[1]+155);
        draw_sprite(spr_uiGolemIcon,0,view_xport[1]+203, view_yport[1]+155);
    }
    draw_text(view_xport[1]+35,view_yport+11, string(global.goldP2)); // Gold Text
    draw_text(view_xport[1]+35,view_yport+35, string(global.stoneP2)); // Stone Text
    draw_sprite(spr_goldUi,0,view_xport[1]+8,view_yport[1]+4); //Gold Ui
    draw_sprite(spr_stoneUi,0,view_xport[1]+8,view_yport[1]+27); // stone Ui
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse/keyboard Ui
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dev mode 

//Draw dev mode on the side of the screen
if (global.dev_mode){
    draw_set_colour(c_white);
    draw_set_font(global.fontDmg);
    draw_text(view_xview[0]+1130,view_yview[0]+695,"Dev mode on");
    draw_text(view_xview[0]+1130,view_yview[0]+30,"Fps: " + string(floor(fps_real)));
    draw_text(view_xview[0]+1130,view_yview[0]+50,"Workers: " + string(instance_number(obj_workerParent)));
    
    if (global.dev_mode_dupe){
        draw_text(view_xview[0]+1060,view_yview[0]+670,"Object to create: "+string(global.dupeObject));
        if (global.dupeObject != noone){
            draw_text(view_xview[0]+1010,view_yview[0]+650,"Selected Object count: "+string(instance_number(global.dupeObject)));    
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General
draw_set_color(c_white);
draw_set_font(global.fontDmg);
draw_text(view_xview[0]+5,view_yview[0]+700,"In VERY early development");
draw_text(view_xview[0]+150,view_yview[0]+100,"Stone: " + string(global.woodP1));
draw_text(view_xview[0]+240,view_yview[0]+100,"Wood: " + string(global.stoneP1));
draw_text(view_xview[0]+310,view_yview[0]+100,"Gold: " + string(global.goldP1));
draw_text(view_xview[0]+410,view_yview[0]+100,"Food: " + string(global.foodP1));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background
depth = 10;
draw_background_tiled_hor(bg_mountains,view_xview[0]/1.1,view_yview[0]+250);
draw_background_tiled_hor(bg_longTrees,view_xview[0]/1.5,view_yview[0]+580);
draw_background_tiled_hor(bg_close_trees,view_xview[0]/2.5,view_yview[0]+570);
depth = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug

if (global.dev_mode){
    draw_set_font(ft_gameFont);
    draw_text(mouse_x-15,mouse_y-200,"WorkerSelectAll_" + string(global.workerSelectAll));
    draw_text(mouse_x-15,mouse_y-190,"workerSelectState" + string(global.workerSelectState));
    draw_text(mouse_x-15,mouse_y-180,"ClickTimer_" + string(global.clickTimer));
    draw_text(mouse_x-15,mouse_y-170,"MultiClickSelect_" + string(global.multiClickSelect));
    draw_text(mouse_x-15,mouse_y-160,"shiftSelect_" + string(global.shiftSelect));
    draw_text(mouse_x-15,mouse_y-150,"SelectBoxStart_" + string(global.selectBoxStart));   
    draw_text(mouse_x-15,mouse_y-140,"SelectStartX_" + string(global.selectStartX));   
    draw_text(mouse_x-15,mouse_y-130,"SelectStartY_" + string(global.selectStartY)); 
    draw_text(mouse_x-15,mouse_y-120,"SelectedNumber_" + string(global.selectedNumber)); 
    draw_text(mouse_x-15,mouse_y-110,"Select_" + string(global.select));
    //draw_text(mouse_x-15,mouse_y-100,"BoxColliding?_" + string(collision_rectangle(global.selectStartX,global.selectStartY,mouse_x,mouse_y,obj_workerParent,0,0)));
    draw_text(mouse_x-100,mouse_y-240,"UnitSelected1_" + string(global.unitSelected[0]));
    draw_text(mouse_x-100,mouse_y-230,"UnitSelected2_" + string(global.unitSelected[1]));
    draw_text(mouse_x-100,mouse_y-220,"UnitSelected3_" + string(global.unitSelected[2]));
    draw_text(mouse_x-100,mouse_y-210,"UnitSelected4_" + string(global.unitSelected[3]));
    draw_text(mouse_x-100,mouse_y-200,"UnitSelected5_" + string(global.unitSelected[4]));
    draw_text(mouse_x-100,mouse_y-190,"UnitSelected6_" + string(global.unitSelected[5]));
    draw_text(mouse_x-100,mouse_y-180,"UnitSelected7_" + string(global.unitSelected[6]));
    draw_text(mouse_x-100,mouse_y-170,"UnitSelected8_" + string(global.unitSelected[7]));
    draw_text(mouse_x-100,mouse_y-160,"UnitSelected9_" + string(global.unitSelected[8]));
    draw_text(mouse_x-100,mouse_y-150,"UnitSelected10_" + string(global.unitSelected[9]));
    draw_text(mouse_x-100,mouse_y-140,"UnitSelected11_" + string(global.unitSelected[10]));
    draw_text(mouse_x-100,mouse_y-130,"UnitSelected12_" + string(global.unitSelected[11]));
    draw_text(mouse_x-100,mouse_y-120,"UnitSelected13_" + string(global.unitSelected[12]));
    draw_text(mouse_x-100,mouse_y-110,"UnitSelected14_" + string(global.unitSelected[13]));
    draw_text(mouse_x-100,mouse_y-100,"UnitSelected15_" + string(global.unitSelected[14]));
    draw_text(mouse_x-100,mouse_y-90,"UnitSelected16_" + string(global.unitSelected[15]));
    draw_text(mouse_x-100,mouse_y-80,"UnitSelected17_" + string(global.unitSelected[16]));
    draw_text(mouse_x-100,mouse_y-70,"UnitSelected18_" + string(global.unitSelected[17]));
    draw_text(mouse_x-100,mouse_y-60,"UnitSelected19_" + string(global.unitSelected[18]));
    draw_text(mouse_x-100,mouse_y-50,"UnitSelected20_" + string(global.unitSelected[19]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object Duplicate 

if (global.dev_mode){
    global.dev_mode_dupe = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delete mode
if (global.dev_mode){
    //global.dev_mode_delete = 1; 
    
}else{
    global.shiftSelect = 1;   
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.dev_mode){
    global.dev_mode = 0;
}else{
    global.dev_mode = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End game

game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object Duplicate OFF

if (global.dev_mode_dupe){
    global.dev_mode_dupe = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delete
if (global.dev_mode &amp;&amp; global.dev_mode_delete){
    global.dev_mode_delete = 0;
}else{
    global.shiftSelect = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
