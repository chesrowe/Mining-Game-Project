<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scr_uiWindowCollider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///general
//Window Size
windowWidth = 3;
windowHeight = 3;
windowX = x;
windowY = y;
showShowWindow = 0;
myInstance = -4;
image_xscale += windowWidth + 1;

//Drag
dragging = 0;
xOff = 0;
yOff = 0;
viewXOff = x - view_xview[0];
viewYOff = y - view_yview[0];

//Exit button
myExit = instance_create(x + (windowWidth * 16), y + 16, obj_uiWindowExit);
myExit.myWindow = id;

//debug array stuff
pages = 1;
page = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit stuff
if (instance_exists(myExit)){
    with(myExit){
        instance_destroy();
    }
}

if(instance_exists(myInstance)){
    with(myInstance){
        myWindow = noone;
        windowOpen = 0;
    }  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Snap to view

if (!dragging){
    

    x = view_xview[0] + viewXOff;
    y = view_yview[0] + viewYOff;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing debug pages

var yyy = (windowHeight + 2) * 16;
var xxx = (windowWidth + 2) * 16;

if (point_in_rectangle(mouse_x, mouse_y, x, y, x + xxx, y + yyy)){  
    if (pages &gt; 1){
        if (mouse_wheel_up() &amp;&amp; page != 0){
            page --;
        }
        
        if (mouse_wheel_down() &amp;&amp; page != (pages - 1)){
            page ++;
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit button sync

if (instance_exists(myExit)){
    myExit.x = x + (windowWidth * 16) + 16;
    myExit.y = y ;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dragging 

if (dragging){
    
    x = mouse_x + xOff;
    y = mouse_y + yOff;

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Snap to view

if (!dragging){
    x = view_xview[0] + viewXOff;
    y = view_yview[0] + viewYOff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop dragging 

dragging = 0;

viewXOff = x - view_xview[0];
viewYOff = y - view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start dragging

dragging = 1;

xOff = x - mouse_x;
yOff = y - mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the debug variables to the window
draw_set_colour(c_white);

var xx = 20;
var yy = 30;

//draw the name of the window
draw_text(x + xx, y + 2, windowName);
//Draw the ID of the instance the debug window is for
if (instance_exists(myInstance)){
    draw_text(x + xx, y + 16, "ID:  " + string(myInstance.id));
}
//Draw the page number
draw_text(x + xx + 90, y + 2, "Page:  " + string(page + 1) + " / " + string(pages)); 

//Draw variables

switch(page){
    //Draw page 1
    case 0:
        for (i = 0; i &lt;= 20; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + " " + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
    //Draw page 2
    case 1:
        for (i = 21; i &lt;= 40; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
    //Draw page 3
    case 2:
        for (i = 41; i &lt;= 60; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
    //Draw page 4
    case 3:
        for (i = 61; i &lt;= 80; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
    //Draw page 5
    case 4:
        for (i = 81; i &lt;= 100; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
    //Draw page 6
     case 5:
        for (i = 101; i &lt;= 120; i++){
            if (debugList[i,0] != -1){
                draw_text(x + xx, y + yy, string(debugList[i, 0] + debugList[i, 1]) );
                yy += 20;        
            }else{
                break;
            }
        }
    break;
}





draw_set_colour(c_black);



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug draw

//Draw a rectagle around the window to show the area the mouse can change the pages in.
//draw_rectangle(x, y, x + ((windowWidth + 2) * 32), y + ((windowHeight + 2) * 32), 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the window 
draw_self();

scr_draw_ui_box(windowWidth,windowHeight, x, y);

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
