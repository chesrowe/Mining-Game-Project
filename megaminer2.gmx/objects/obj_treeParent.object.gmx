<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
// if the tree is on a slope or not in the corrent place, delete it 
if (place_meeting(x,y,obj_tileSurfaceHillParent)){
    instance_destroy();
}
if (!place_meeting(x,y,obj_tileSurfaceParent)){
    instance_destroy();
}
if (y &gt; instance_nearest(x,y,obj_tileSurfaceFlatParent)){
    y = ((instance_nearest(x,y,obj_tileSurfaceFlatParent)).y)+6;
}
//sets the sprites to use for the tree
x += choose(irandom(16), -(irandom(16)));
y -= choose(0,2,4);
resource = 'wood';
levelReq = 1;
fall = 1000; 
falling = 0;
fallTimer = 80;
fallDir = 'right';
fell = 0;
woodLeft = 2000;
fallSpeed = 0;
fallIncrement = 0;
fallXAdd = .3;
fallYAdd =.2;
image_speed = 0;
beingCut = 0;
animationTimer = 0;
showDebug = 0;
xp = 25;
posDistance = 24;
posTime = 30;
midTime = 0;
midRandom = 10;
spriteTop = spr_treeCommonTop;
spriteBottom = spr_treeCommonStump;
bottomX = -2;
bottomY = 4;
stumpX = x + bottomX;
stumpY = y + bottomY;



//bottom = instance_create(x+2,y+18,obj_treeBottom);

//Sound
soundPlayed = 0;

fallingSound[0] = sd_treeFalling1;
fallingSound[1] = sd_treeFalling2;
fallingSound[2] = sd_treeFalling3;
fallingSound[3] = sd_treeFalling4;

//checks to see if it spawned on the town center
if (place_meeting(x,y,obj_townCenter)){
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Visibility
if (x &gt;= (view_xview[0]-260)){
    if (x &lt;= (view_xview[0]+1450)){
        visible = 1;
    }else{
        visible = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General

if (fall &lt;= 0) {
    if (!fell){
        falling = 1;
    }
}

//Makes the tree fall
if (falling){
    if (!soundPlayed){
        audio_play_sound_at(fallingSound[irandom(3)],x,y,0,1000,200,1,0,9999900);    
        soundPlayed = 1;
    }
    fallIncrement += .001;
    fallTimer --;
    if (fallSpeed &lt; 5){
        fallSpeed += fallIncrement;
    }
    if (collision_line(x,y,x + lengthdir_x(220,image_angle+90),y + lengthdir_y(220,image_angle+90),obj_tileSurfaceParent,1,0)){
        falling = 0;
        fell = 1;
        instance_destroy();
        midRandom += 10;
        midTime += 30;
    }
    if (fallDir = 'right'){
        image_angle -= fallSpeed;  
        x += fallXAdd;  
        y -= fallYAdd;
    }else{
        image_angle += fallSpeed;
        x -= .3;
    }

}
if (!fell){
    animationTimer ++;
    if (animationTimer &gt;= 30){
        beingCut = 0;
    }else{
        beingCut = 1;
    }
}else{
    animationTimer = 31;
    image_speed = 0;
}



if (beingCut){
    image_speed = .09;
}else{
    image_speed = 0;
}


//Destroy the tree, if the wood is gone
if (woodLeft &lt;= 0){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_buildingParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Make the tree delete itself it a building is placed over it
if (!falling &amp;&amp; other.placed == 1){
    if (!fell &amp;&amp; other.object_index != obj_warehouse){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dev mode

//Shows the debug 
if (global.dev_mode &amp;&amp; !showDebug){
    showDebug = 1;
}else{
    showDebug = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start working
//Makes the selected worker mine this resource

//Set the selected workers to woodcutting
if (!global.building &amp;&amp; !global.workerBuild &amp;&amp; !position_meeting(mouse_x,mouse_y,obj_workerParent)){
    var tree = id;
    scr_unit_array_set_resource_target('woodcutting',tree);   
    scr_unit_array_clear();
}else{
    scr_unit_array_clear();
}
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete
if (global.debugClickDeleteTrees &amp;&amp; global.dev_mode){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw self and bottom

draw_self();
draw_sprite(spriteBottom,0,stumpX,stumpY);

//draw_line for collision checking
if (global.dev_mode){
    draw_line_width(x,y,x + lengthdir_x(200,image_angle+90),y + lengthdir_y(200,image_angle+90),10);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
